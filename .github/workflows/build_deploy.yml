name: Build and deploy
run-name: Build and deploy
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
permissions:
  contents: write

jobs:
  test-functions:
    uses: ./.github/workflows/test_functions.yml
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Download toplist
        run: |
          wget -qO - 'https://tranco-list.eu/top-1m.csv.zip' | gunzip - > toplist.tmp
          awk -F ',' '{print $2}' toplist.tmp > temp && mv temp toplist.tmp
          bash functions/tools.sh format toplist.tmp

      - name: Download NRD feed
        run: |
          # NRDs feeds are limited to domains registered in the last 30 days
          {
            wget -qO - 'https://raw.githubusercontent.com/shreshta-labs/newly-registered-domains/main/nrd-1m.csv'
            wget -qO - 'https://cdn.jsdelivr.net/gh/hagezi/dns-blocklists@latest/wildcard/nrds.10-onlydomains.txt' \
                | grep -vF '#'
            curl -sH 'User-Agent: openSquat-2.1.0' 'https://feeds.opensquat.com/domain-names-month.txt'
          } > nrd.tmp
          bash functions/tools.sh format nrd.tmp

      - name: Check if feeds were downloaded
        run: |
          if [[ -f toplist.tmp ]] && [[ -f nrd.tmp ]]; then
            exit
          fi

          [[ ! -f toplist.tmp ]] && printf "Error downloading toplist.\n"
          [[ ! -f nrd.tmp ]] && printf "Error downloading NRD feed.\n"
          exit 1

      - name: Push
        run: |
          git config user.email ${{ vars.GIT_EMAIL }}
          git config user.name ${{ vars.GIT_USERNAME }}
          git add .
          git diff-index --quiet HEAD || git commit -m "Download feeds"
          git push -q

  # This condition lets the job run even if any of the previous jobs failed
  # ${{ ! cancelled() }}

  # This condition prevents the job from running if the test-functions job failed
  # ${{ needs.test-functions.result == 'success' }}

  retrieve:
    needs: [test-functions]
    uses: ./.github/workflows/retrieve_domains.yml
    secrets: inherit

  remove-dead:
    needs: [test-functions, retrieve]
    if: ${{ ! cancelled() && needs.test-functions.result == 'success' }}
    uses: ./.github/workflows/check_dead.yml

  remove-parked:
    needs: [test-functions, remove-dead]
    if: ${{ ! cancelled() && needs.test-functions.result == 'success' }}
    uses: ./.github/workflows/check_parked.yml

  validate:
    needs: [test-functions, remove-parked]
    if: ${{ ! cancelled() && needs.test-functions.result == 'success' }}
    uses: ./.github/workflows/validate_entries.yml
    secrets: inherit

  deploy:
    needs: [test-functions, validate]
    if: ${{ ! cancelled() && needs.test-functions.result == 'success' }}
    uses: ./.github/workflows/build_lists.yml

  prune-logs:
    needs: deploy
    if: ${{ ! cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Prune logs
        run: |
          lines="$(wc -l < config/domain_log.csv)"
          if (( lines > 10000 )); then
              sed -i "1,$(( lines - 10000 ))d" config/domain_log.csv
          fi

          lines="$(wc -l < config/source_log.csv)"
          if (( lines > 1000 )); then
              sed -i "1,$(( lines - 1000 ))d" config/source_log.csv
          fi

      - name: Push
        run: |
          git config user.email ${{ vars.GIT_EMAIL }}
          git config user.name ${{ vars.GIT_USERNAME }}
          git add .
          git diff-index --quiet HEAD || git commit -m "Prune logs"
          git push -q

  update-readme:
    needs: [deploy, prune-logs]
    # Run only if deployment was successful
    if: ${{ ! cancelled() && needs.deploy.result == 'success' }}
    uses: ./.github/workflows/update_readme.yml
